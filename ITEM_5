clear all; clc;

% Leer datos del archivo 'Curvas_Medidas_Motor'
[x1] = xlsread('Curvas_Medidas_Motor');
t0 = x1(:,1); % Tiempo
y = x1(:,2); % Velocidad angular

% Definir parámetros iniciales
t_off = 0.02; % Tiempo de inicio del escalón
t_t1 = 3e-4; % Tiempo de primer muestra
t_inic = t_off + t_t1;

% Obtener valor de y(t1)
[val, lugar] = min(abs(t_inic - t0));
y_t1 = y(lugar);

% Inicializar variables
ii = 0;
ii = ii + 1;

% Obtener valor de y(2*t1)
t_2t1 = 2 * t_t1;
t_inic = t_off + t_2t1;
[val, lugar] = min(abs(t_inic - t0));
y_2t1 = y(lugar);

% Obtener valor de y(3*t1)
t_3t1 = 3 * t_t1;
t_inic = t_off + t_3t1;
[val, lugar] = min(abs(t_inic - t0));
y_3t1 = y(lugar);

% Obtener valor de K (ganancia del sistema)
[val, lugar] = min(abs(0.08 - t0));
K = y(lugar) / 12;

% Cálculo de las constantes de tiempo
k1 = (1 / 12) * y_t1 / K - 1; % Afecto el valor del escalón
k2 = (1 / 12) * y_2t1 / K - 1;
k3 = (1 / 12) * y_3t1 / K - 1;

% Cálculo de los coeficientes alfa y beta
be = 4 * k1^3 * k3 - 3 * k1^2 * k2^2 - 4 * k2^3 + k3^2 + 6 * k1 * k2 * k3;
alfa1 = (k1 * k2 + k3 - sqrt(be)) / (2 * (k1^2 + k2));
alfa2 = (k1 * k2 + k3 + sqrt(be)) / (2 * (k1^2 + k2));
beta = (k1 + alfa2) / (alfa1 - alfa2);

% Cálculo de las constantes de tiempo T1, T2 y T3
T1_ang = -t_t1 / log(alfa1);
T2_ang = -t_t1 / log(alfa2);
T3_ang = beta * (T1_ang - T2_ang) + T1_ang;
T1(ii) = T1_ang;
T2(ii) = T2_ang;
T3(ii) = T3_ang;

% Promedio de las constantes de tiempo
T3_ang = sum(T3 / length(T3));
T2_ang = sum(T2 / length(T2));
T1_ang = sum(T1 / length(T1));

% Modelo del sistema
sys_G_ang = tf(K, conv([T1_ang 1], [T2_ang 1]));

% Respuesta del sistema a un escalón de 12V
[yo, to] = step(12 * sys_G_ang, .1 - t_off);

% Graficar resultados
figure;
plot(t0, y, 'r'); hold on; % Datos originales
plot(t_t1 + 0.02019, y_t1, 'o'); % Punto t1
plot(t_2t1 + 0.02019, y_2t1, 'o'); % Punto 2*t1
plot(t_3t1 + 0.02019, y_3t1, 'o'); % Punto 3*t1
plot(to + t_off, yo); % Respuesta del sistema
title('Respuesta del Sistema a un Escalón de 12V');
xlabel('Tiempo [s]');
ylabel('Velocidad Angular [rad/s]');
grid on;
legend('Datos Originales', 'Punto t1', 'Punto 2*t1', 'Punto 3*t1', 'Modelo Simulado');
