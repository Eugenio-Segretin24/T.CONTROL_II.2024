% ITEM 2 CASO 1

clear all; clc;

% Leer datos del archivo Excel
datos = readtable('Curvas_Medidas_RLC_2024.xls'); 
t0 = datos{:, 1}; % Tiempo (columna 1 del archivo Excel)
y = datos{:, 3}; % Tensión en el capacitor (columna 3 del archivo Excel)

% Parámetros iniciales
t_off = 0.01; % Tiempo de offset
t_t1 = 4e-3; % Tiempo t1
t_inic = t_off + t_t1; % Tiempo inicial ajustado

% Encuentra el valor más cercano a t_inic en t0
[val, lugar] = min(abs(t_inic - t0)); 
y_t1 = y(lugar); % Valor de y en t1

% Calcular valores en intervalos específicos
t_2t1 = 2 * t_t1; % Doble de t1
t_inic = t_off + t_2t1; % Tiempo inicial ajustado para 2t1
[val, lugar] = min(abs(t_inic - t0)); 
y_2t1 = y(lugar); % Valor de y en 2t1

t_3t1 = 3 * t_t1; % Triple de t1
t_inic = t_off + t_3t1; % Tiempo inicial ajustado para 3t1
[val, lugar] = min(abs(t_inic - t0)); 
y_3t1 = y(lugar); % Valor de y en 3t1

[val, lugar] = min(abs(0.049 - t0)); % Encuentra el valor más cercano a 0.049 en t0
K = y(lugar) / 12; % Ganancia del sistema

% Cálculo de los parámetros k1, k2, k3
k1 = (1 / 12) * y_t1 / K - 1; 
k2 = (1 / 12) * y_2t1 / K - 1; 
k3 = (1 / 12) * y_3t1 / K - 1; 

% Cálculo del parámetro beta
be = 4 * k1^3 * k3 - 3 * k1^2 * k2^2 - 4 * k2^3 + k3^2 + 6 * k1 * k2 * k3; 

% Cálculo de alfa1, alfa2 y beta
alfa1 = (k1 * k2 + k3 - sqrt(be)) / (2 * (k1^2 + k2)); 
alfa2 = (k1 * k2 + k3 + sqrt(be)) / (2 * (k1^2 + k2)); 
beta = (k1 + alfa2) / (alfa1 - alfa2); 

% Cálculo de las constantes de tiempo T1, T2 y T3
T1_ang = -t_t1 / log(alfa1); 
T2_ang = -t_t1 / log(alfa2); 
T3_ang = beta * (T1_ang - T2_ang) + T1_ang; 

% Promedio de las constantes de tiempo
T1 = T1_ang; 
T2 = T2_ang; 
T3 = T3_ang; 
T3_ang = sum(T3 / length(T3)); 
T2_ang = sum(T2 / length(T2)); 
T1_ang = sum(T1 / length(T1)); 

% Crear la función de transferencia del sistema
sys_G_ang = tf(K, conv([T1_ang 1], [T2_ang 1])); 
[yo, to] = step(12 * sys_G_ang, 0.05 - t_off); % Respuesta al escalón del sistema

% Graficar los resultados
figure;
plot(t0, y, 'r'), hold on 
grid on; 
plot(t_t1 + t_off, y_t1, 'o'); % Marca el punto t1
plot(t_2t1 + t_off, y_2t1, 'o'); % Marca el punto 2t1
plot(t_3t1 + t_off, y_3t1, 'o'); % Marca el punto 3t1
plot(to + t_off, yo); % Grafica la respuesta simulada
axis([0 0.1 -13 13]);
legend('Datos originales', 't1', '2t1', '3t1', 'Respuesta simulada');
legend('boxoff');

% Cálculo de los componentes del circuito RLC
imax = max(y); % Máxima corriente observada (ajustar según corresponda)
R = 12 / imax; % Resistencia calculada
aux_den = cell2mat(sys_G_ang.den);
C = aux_den(2) / R; % Capacitancia
L = aux_den(1) / C; % Inductancia

% Mostrar los valores calculados en la ventana de comandos
disp('Valores calculados del circuito RLC:');
disp(['R = ', num2str(R), ' ohmios']);
disp(['L = ', num2str(L), ' henrios']);
disp(['C = ', num2str(C), ' faradios']);
